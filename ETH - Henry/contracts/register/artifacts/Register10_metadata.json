{
	"compiler": {
		"version": "0.8.28+commit.7893614a"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "myInfo",
						"type": "string"
					}
				],
				"name": "addInfo",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "index",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "index",
						"type": "uint256"
					}
				],
				"name": "getOneInfo",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "listAllInfo",
				"outputs": [
					{
						"internalType": "string[]",
						"name": "",
						"type": "string[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "start",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "end",
						"type": "uint256"
					}
				],
				"name": "listInfo",
				"outputs": [
					{
						"internalType": "string[]",
						"name": "",
						"type": "string[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "index",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "newInfo",
						"type": "string"
					}
				],
				"name": "updateInfo",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"author": "Solange Gueiros",
			"kind": "dev",
			"methods": {
				"addInfo(string)": {
					"details": "Get the position (index) where the string was stored and return it",
					"params": {
						"myInfo": "the new string to be stored"
					},
					"returns": {
						"index": "where the string was stored"
					}
				},
				"getOneInfo(uint256)": {
					"details": "retrieves the string locate in the index of the array `storedInfos`",
					"params": {
						"index": "is the location in the array to be returned"
					},
					"returns": {
						"_0": "the stored string in the index"
					}
				},
				"listAllInfo()": {
					"details": "retrieves the array of strings of the state variable `storedInfos`call the function listInfo from index 0 to info.length-1 ",
					"returns": {
						"_0": "an string array"
					}
				},
				"listInfo(uint256,uint256)": {
					"details": "retrieves the string locate in the index of the array `storedInfos`",
					"params": {
						"end": "is the final range in the array to be returned",
						"start": "is the initial range in the array to be returned"
					},
					"returns": {
						"_0": "infoAux - the stored string in the index"
					}
				},
				"updateInfo(uint256,string)": {
					"details": "Update `newInfo` in some index of the string array",
					"params": {
						"index": "is the position where the string will be updated",
						"newInfo": "is the new string to be stored"
					}
				}
			},
			"title": "Concepts: Loop for on array",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"addInfo(string)": {
					"notice": "Store `myInfo` at the end of the string array"
				},
				"getOneInfo(uint256)": {
					"notice": "Return a stored string"
				},
				"listAllInfo()": {
					"notice": "Return all the strings stored in the array using the function listInfo from beginning to end"
				},
				"listInfo(uint256,uint256)": {
					"notice": "Return a range of stored strings It is a public function because it can be called inside (from listAllInfo) or outside"
				},
				"updateInfo(uint256,string)": {
					"notice": "Update `newInfo` in some index of the string array"
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"ETH - Henry/contracts/register/Register10.sol": "Register10"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"ETH - Henry/contracts/register/Register10.sol": {
			"keccak256": "0x67389f65fbf2265aca997bc10805a75fb18753d2086856cbb4b5ebb051b0eb20",
			"license": "MIT",
			"urls": [
				"bzz-raw://69f3b9637a84a7c907a73ad05e3fc5ca4b56c6de7509a3896466dbf3e0a546e7",
				"dweb:/ipfs/QmfNqKb4uRqyWhJdNoYQmuLEoVTvsNPiaAqBRqrk21JAwe"
			]
		}
	},
	"version": 1
}